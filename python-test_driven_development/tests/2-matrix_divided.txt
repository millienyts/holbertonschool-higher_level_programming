def matrix_divided(matrix, div):
    """
    Divide all elements of a matrix by a given divisor.

    Args:
        matrix (list of lists): The matrix containing integers or floats.
        div (number): The divisor, which must be a non-zero number.

    Returns:
        list of lists: A new matrix where each element is divided by the divisor,
                       rounded to 2 decimal places.

    Raises:
        TypeError: If the matrix is not a list of lists of integers or floats,
                   or if each row of the matrix does not have the same size,
                   or if the divisor is not a number.
        ZeroDivisionError: If the divisor is equal to 0.

    Example:
        >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        >>> divisor = 2
        >>> result = matrix_divided(matrix, divisor)
        >>> print(result)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

        >>> matrix_divided([[1, 2], [3, 4]], 2)
        [[0.5, 1.0], [1.5, 2.0]]

        >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
        Traceback (most recent call last):
            ...
        ZeroDivisionError: division by zero

        >>> matrix_divided([[1, 2], [3, 'four']], 2)
        Traceback (most recent call last):
            ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
        Traceback (most recent call last):
            ...
        TypeError: Each row of the matrix must have the same size
    """
